// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/coldze/test/middleware (interfaces: HttpRequest)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	io "io"
	http "net/http"
	reflect "reflect"
)

// MockHttpRequest is a mock of HttpRequest interface
type MockHttpRequest struct {
	ctrl     *gomock.Controller
	recorder *MockHttpRequestMockRecorder
}

// MockHttpRequestMockRecorder is the mock recorder for MockHttpRequest
type MockHttpRequestMockRecorder struct {
	mock *MockHttpRequest
}

// NewMockHttpRequest creates a new mock instance
func NewMockHttpRequest(ctrl *gomock.Controller) *MockHttpRequest {
	mock := &MockHttpRequest{ctrl: ctrl}
	mock.recorder = &MockHttpRequestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHttpRequest) EXPECT() *MockHttpRequestMockRecorder {
	return m.recorder
}

// GetBody mocks base method
func (m *MockHttpRequest) GetBody() io.ReadCloser {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBody")
	ret0, _ := ret[0].(io.ReadCloser)
	return ret0
}

// GetBody indicates an expected call of GetBody
func (mr *MockHttpRequestMockRecorder) GetBody() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBody", reflect.TypeOf((*MockHttpRequest)(nil).GetBody))
}

// GetContext mocks base method
func (m *MockHttpRequest) GetContext() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContext")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// GetContext indicates an expected call of GetContext
func (mr *MockHttpRequestMockRecorder) GetContext() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContext", reflect.TypeOf((*MockHttpRequest)(nil).GetContext))
}

// GetHeader mocks base method
func (m *MockHttpRequest) GetHeader() http.Header {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHeader")
	ret0, _ := ret[0].(http.Header)
	return ret0
}

// GetHeader indicates an expected call of GetHeader
func (mr *MockHttpRequestMockRecorder) GetHeader() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHeader", reflect.TypeOf((*MockHttpRequest)(nil).GetHeader))
}

// GetRawRequest mocks base method
func (m *MockHttpRequest) GetRawRequest() *http.Request {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRawRequest")
	ret0, _ := ret[0].(*http.Request)
	return ret0
}

// GetRawRequest indicates an expected call of GetRawRequest
func (mr *MockHttpRequestMockRecorder) GetRawRequest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRawRequest", reflect.TypeOf((*MockHttpRequest)(nil).GetRawRequest))
}
